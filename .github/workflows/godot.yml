name: Godot Builder

on:
  workflow_dispatch:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+([a-zA-Z]*\-*)*'

env:
  GODOT_VERSION: 4.4
  EXPORT_NAME: Reia
  PROJECT_PATH: godot
  WINEPREFIX: /tmp/.wine

jobs:
  build-rust-windows:
    name: Build Rust GDExtension (Windows)
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
      - name: Build GDExtension (dll)
        run: |
          cd rust
          cargo build --release --target x86_64-pc-windows-msvc
      - name: Upload GDExtension artifact
        uses: actions/upload-artifact@v4
        with:
          name: reia_gdext-windows
          path: rust/target/x86_64-pc-windows-msvc/release/reia_gdext.dll

  export-windows:
    needs: build-rust-windows
    name: Windows Export
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Rust GDExtension
        uses: actions/download-artifact@v4
        with:
          name: reia_gdext-windows
          path: rust/target/release/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "win" "$EXPORT_DIR/windows/$EXPORT_NAME.exe"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows
          path: build/windows

  build-rust-linux:
    name: Build Rust GDExtension (Linux)
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-unknown-linux-gnu
        override: true
    - name: Build GDExtension (so)
      run: |
        cd rust
        cargo build --release --target x86_64-unknown-linux-gnu
    - name: Upload GDExtension artifact
      uses: actions/upload-artifact@v4
      with:
        name: reia_gdext-linux
        path: rust/target/x86_64-unknown-linux-gnu/release/reia_gdext.so

  export-linux:
      needs: build-rust-linux
      name: Linux Export
      runs-on: ubuntu-20.04
      container:
        image: barichello/godot-ci:4.4
      steps:
        - name: Checkout
          uses: actions/checkout@v4
          with:
            lfs: true
        - name: Download Rust GDExtension
          uses: actions/download-artifact@v4
          with:
            name: reia_gdext-linux
            path: rust/target/release/
        - name: Setup
          run: |
            mkdir -v -p ~/.local/share/godot/export_templates/
            mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
        - name: Linux Build
          run: |
            mkdir -v -p build/linux
            EXPORT_DIR="$(readlink -f build)"
            cd $PROJECT_PATH
            godot --headless --verbose --export-release "linux" "$EXPORT_DIR/linux/$EXPORT_NAME.x86_64"
        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          with:
            name: linux
            path: build/linux

  export-server:
    needs: build-rust-linux
    name: Server Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Rust GDExtension
        uses: actions/download-artifact@v4
        with:
          name: reia_gdext-linux
          path: rust/target/release/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Linux Build
        run: |
          mkdir -v -p build/server
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "server" "$EXPORT_DIR/server/$EXPORT_NAME.x86_64"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: server
          path: build/server

  build-rust-mac:
    name: Build Rust GDExtension (Mac)
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Build GDExtension (dylib)
        run: |
          cd rust
          cargo build --release --target x86_64-apple-darwin
      - name: Upload GDExtension artifact
        uses: actions/upload-artifact@v4
        with:
          name: reia_gdext-mac
          path: rust/target/x86_64-apple-darwin/release/reia_gdext.dylib

  export-mac:
    needs: build-rust-mac
    name: Mac Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Rust GDExtension
        uses: actions/download-artifact@v4
        with:
          name: reia_gdext-mac
          path: rust/target/release/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "mac" "$EXPORT_DIR/mac/$EXPORT_NAME.zip"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: build/mac

  build-rust-web:
    name: Build Rust GDExtension (Web)
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
      - name: Build GDExtension (wasm)
        run: |
          cd rust
          cargo build --release --target wasm32-unknown-unknown
      - name: Upload GDExtension artifact
        uses: actions/upload-artifact@v4
        with:
          name: reia_gdext-web
          path: rust/target/wasm32-unknown-unknown/release/reia_gdext.wasm

  export-web:
    needs: build-rust-web
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:4.4
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Download Rust GDExtension
        uses: actions/download-artifact@v4
        with:
          name: reia_gdext-web
          path: rust/target/release/
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web
          EXPORT_DIR="$(readlink -f build)"
          cd $PROJECT_PATH
          godot --headless --verbose --export-release "web" "$EXPORT_DIR/web/index.html"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web
          path: build/web
  release-notes:
    name: Release Notes
    runs-on: ubuntu-latest
    needs: [export-windows, export-linux, export-server, export-mac, export-web]
    if: ${{ always() && !cancelled() && needs.build.result == 'success' && startsWith(github.ref, 'refs/tags/') }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Format Tag Name
        id: replace_string
        uses: frabert/replace-string-action@v2
        with:
          pattern: '\.'
          string: ${{ github.ref_name }}
          replace-with: "_"
      - name: Create Release And Upload Asset
        uses: softprops/action-gh-release@v2
        if: ${{startsWith(github.ref, 'refs/tags/') }}
        with:
          files: |
            build/windows
            build/linux
            build/server
            build/mac
            build/web
          # build/Reia_${{ steps.replace_string.outputs.replaced }}
          tag_name: ${{ github.ref_name }}
          body: |
            # Reia - `${{ github.ref_name }}`

            ...

            ### Changes
            **Added:**
            - ...

            **Removed:**
            - ...

            **Changed:**
            - ...

            **Fixed:**
            - ...

            ----

            ...
          draft: true
          prerelease: true
